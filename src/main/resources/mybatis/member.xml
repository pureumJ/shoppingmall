<?xml version="1.0" encoding="UTF-8" ?> 
 
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.model.member.MemberMapper">

	<select id="duplicatedId" parameterType="String"
		resultType="int">
		select count(id)
		from member
		where id = #{id}
	</select>

	<select id="duplicatedEmail" parameterType="String"
		resultType="int">
		select count(email)
		from member
		where email = #{email}
	</select>

	<insert id="create" parameterType="com.model.member.MemberDTO">
		insert into member(id, passwd,
		mname, tel, email, zipcode, address1,address2, job, mdate, fname,
		grade)
		values(#{id}, #{passwd}, #{mname}, #{tel}, #{email}, #{zipcode},
		#{address1},
		#{address2}, #{job}, sysdate(), #{fname}, 'H')
	</insert>

	<select id="getGrade" parameterType="String" resultType="Map">
		select
		grade, mname, fname
		from member
		where id = #{id}
	</select>

	<select id="loginCheck" parameterType="Map" resultType="int">
		select
		count(*) from member
		where id = #{id}
		and passwd = #{passwd}
	</select>

	<select id="list" parameterType="Map"
		resultType="com.model.member.MemberDTO">
		select id, mname, tel, email, zipcode, address1, address2, fname
		from
		member
		<where>
			<choose>
				<when test="col=='mname'">
					mname like concat('%', #{word} ,'%')
				</when>
				<when test="col=='id'">
					id like concat('%', #{word} ,'%')
				</when>
				<when test="col=='email'">
					email like concat('%', #{word} ,'%')
				</when>
			</choose>
		</where>
		order by mdate desc
		limit #{sno}, #{eno}
	</select>

	<select id="total" parameterType="Map" resultType="int">
		select count(*) from member
		<where>
			<choose>
				<when test="col=='mname'">
					mname like concat('%', #{word}, '%')
				</when>
				<when test="col=='id'">
					id like concat('%', #{word}, '%')
				</when>
				<when test="col=='email'">
					email like concat('%', #{word}, '%')
				</when>
			</choose>
		</where>
	</select>

	<select id="read" parameterType="String"
		resultType="com.model.member.MemberDTO">
		select * from member
		where id = #{id}
	</select>

	<update id="update" parameterType="com.model.member.MemberDTO">
		update member
		set tel = #{tel},
		email = #{email},
		zipcode = #{zipcode},
		address1 = #{address1},
		address2
		= #{address2},
		job = #{job}
		where id = #{id}
	</update>
	
	<delete id="delete" parameterType="int">
		delete from member
		where id = #{id}
	</delete>

	<resultMap type="com.model.member.MemberDTO" id="memberOrder">
		<result property="id" column="id" />
		<result property="mname" column="mname" />
		<result property="fname" column="fname" />
		<result property="zipcode" column="zipcode" />
		<result property="address1" column="address1" />
		<result property="address2" column="address2" />
		<collection property="list" column="id" javaType="List"
			ofType="com.model.orders.OrdersDTO" resultMap="orderList" />
	</resultMap>
	
	<resultMap type="com.model.orders.OrdersDTO" id="orderList">
		<result property="orderno" column="orderno" />
		<result property="odate" column="odate" />
		<result property="total" column="total" />
		<result property="ostate" column="ostate" />
		<collection property="list" column="id" javaType="List"
			ofType="com.model.orders.OrderdetailDTO" resultMap="detailList" />
	</resultMap>
	
	<resultMap type="com.model.orders.OrderdetailDTO"
		id="detailList">
		<result property="quantity" column="quantity" />
		<result property="pname" column="pname" />
		<result property="contentsno" column="contentsno" />
	</resultMap>
	
	<select id="mypage" parameterType="String"
		resultMap="memberOrder">
		select m.id, m.mname, m.fname, m.zipcode, m.address1,
		m.address2,
		o.orderno,o.odate,o.total,o.ostate,o.reqtext, d.quantity,
		d.contentsno, d.pname
		from member m left outer join orders o
		on m.id =
		o.id left outer join order_detail d
		on o.orderno = d.orderno
		where
		m.id=#{id}
	</select>
	
	<update id="updateFile" parameterType="Map">
		update member
		set fname = #{fname}
		where id = #{id}
	</update>
</mapper>